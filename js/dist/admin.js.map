{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,IACzBH,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,SAASC,EAAgBC,EAAGC,GAC1B,OAAOF,EAAkBZ,OAAOe,eAAiBf,OAAOe,eAAeC,OAAS,SAAUH,EAAGC,GAC3F,OAAOD,EAAEI,UAAYH,EAAGD,CAC1B,EAAGD,EAAgBC,EAAGC,EACxB,CCHA,SAASI,EAAeL,EAAGd,GACzBc,EAAEP,UAAYN,OAAOmB,OAAOpB,EAAEO,WAAYO,EAAEP,UAAUc,YAAcP,EAAGE,EAAeF,EAAGd,EAC3F,CCHA,MAAM,EAA+BU,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCInCU,EAA6B,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAAAN,EAAAG,EAAAC,GAAA,IAAAG,EAAAJ,EAAAf,UAuC/C,OAvC+CmB,EAChDC,OAAA,SAAOC,GACLL,EAAAhB,UAAMoB,OAAMlB,KAAC,KAAAmB,GACbC,KAAKC,MAAQD,KAAKE,MAAMD,KAC1B,EAACJ,EAEDM,UAAA,WACE,MAAO,4CACT,EAACN,EAEDO,MAAA,WACE,MAAO,kBACT,EAACP,EAEDQ,QAAA,WAAU,IAAAC,EAAA,KACR,OACEC,EAAA,OAAKJ,UAAU,cACbI,EAAA,SAAG,4FAEHA,EAAA,OAAKJ,UAAU,cACbI,EAACC,IAAM,CACLL,UAAU,wCACVM,QAAS,WACPH,EAAKJ,MAAMQ,YACXJ,EAAKK,MACP,GACD,UAGA,IACDJ,EAACC,IAAM,CACLL,UAAU,SACVM,QAAS,WAAF,OAAQH,EAAKK,MAAM,GAC3B,WAMT,EAAClB,CAAA,CAvC+C,CAASmB,KCAtCC,EAA2B,SAAAnB,GAAA,SAAAmB,IAAA,OAAAnB,EAAAC,MAAA,KAAAC,YAAA,KAAAN,EAAAuB,EAAAnB,GAAA,IAAAG,EAAAgB,EAAAnC,UAkL7C,OAlL6CmB,EAC9CC,OAAA,SAAOC,GAAO,IAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EACZxB,EAAAhB,UAAMoB,OAAMlB,KAAC,KAAAmB,GACbC,KAAKC,MAAQD,KAAKE,MAAMD,MAGxBD,KAAKmB,YAAc,CACjBC,KAAMpB,KAAKqB,eACXC,SAAUtB,KAAKC,MAAMqB,WAAiC,OAAzBR,EAAId,KAAKC,MAAMsB,iBAAU,EAArBT,EAAuBQ,WAAY,GACpEE,OAAQxB,KAAKC,MAAMuB,SAA+B,OAAzBT,EAAIf,KAAKC,MAAMsB,iBAAU,EAArBR,EAAuBS,SAAUxB,KAAKC,MAAMI,UAAgC,OAAzBW,EAAIhB,KAAKC,MAAMsB,iBAAU,EAArBP,EAAuBX,UAAW,GACtHoB,SAAUzB,KAAKC,MAAMwB,WAAiC,OAAzBR,EAAIjB,KAAKC,MAAMsB,iBAAU,EAArBN,EAAuBQ,WAAY,GACpEC,YAAa1B,KAAKC,MAAMyB,cAAoC,OAAzBR,EAAIlB,KAAKC,MAAMsB,iBAAU,EAArBL,EAAuBQ,cAAe,MAG/E1B,KAAK2B,WAAa3B,KAAKE,MAAMyB,YAAc,EAC7C,EAEA9B,EACAwB,aAAA,WAEE,OAAIrB,KAAKC,MAAMsB,YAAcvB,KAAKC,MAAMsB,WAAWH,KAC1CpB,KAAKC,MAAMsB,WAAWH,KAI3BpB,KAAKC,MAAMmB,MAA4B,eAApBpB,KAAKC,MAAMmB,KACzBpB,KAAKC,MAAMmB,KAIb,IACT,EAACvB,EAEDM,UAAA,WACE,MAAO,0CACT,EAACN,EAEDO,MAAA,WACE,MAAO,2BACT,EAACP,EAEDQ,QAAA,WAAU,IAAAC,EAAA,KACR,OACEC,EAAA,OAAKJ,UAAU,cACbI,EAAA,OAAKJ,UAAU,QACbI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,QACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAKmB,YAAYC,KACxBS,SAAU,SAAC3C,GACToB,EAAKa,YAAYC,KAAOlC,EAAE4C,OAAOF,MACjCrB,EAAEwB,QACJ,GAEAxB,EAAA,UAAQqB,MAAM,MAAK,YACnBrB,EAAA,UAAQqB,MAAM,WAAU,kBAG5BrB,EAAA,OAAKJ,UAAU,YAAW,iBACTH,KAAKmB,YAAYC,OAIT,OAA1BpB,KAAKmB,YAAYC,MAChBb,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,YACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKmB,YAAYG,SACxBU,QAAS,SAAC9C,GACRoB,EAAKa,YAAYG,SAAWpC,EAAE4C,OAAOF,KACvC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,qBACLH,KAAKmB,YAAYG,UAAY,kBAK3B,YAA1BtB,KAAKmB,YAAYC,MAChBb,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,oBACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKmB,YAAYG,SACxBW,YAAY,mCACZD,QAAS,SAAC9C,GACRoB,EAAKa,YAAYG,SAAWpC,EAAE4C,OAAOF,KACvC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,sHAM9BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAkC,OAA1BP,KAAKmB,YAAYC,KAAgB,SAAW,WACpDb,EAAA,OAAKJ,UAAU,yBACbI,EAAA,YACEJ,UAAU,cACV+B,KAAK,IACLN,MAAO5B,KAAKmB,YAAYK,OACxBQ,QAAS,SAAC9C,GACRoB,EAAKa,YAAYK,OAAStC,EAAE4C,OAAOF,KACrC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,4BACEH,KAAKmB,YAAYK,QAAU,IAAIW,OAAO,gBAIpE5B,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,8BACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKmB,YAAYM,SACxBO,QAAS,SAAC9C,GACRoB,EAAKa,YAAYM,SAAWvC,EAAE4C,OAAOF,KACvC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,sEAExBI,EAAA,WAAM,qBACaP,KAAKmB,YAAYM,UAAY,WAInDzB,KAAK2B,WAAWQ,OAAS,GACxB5B,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,YACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAKmB,YAAYO,YACxBG,SAAU,SAAC3C,GACToB,EAAKa,YAAYO,YAAcxC,EAAE4C,OAAOF,MAAQQ,SAASlD,EAAE4C,OAAOF,OAAS,IAC7E,GAEArB,EAAA,UAAQqB,MAAM,IAAG,yBAChB5B,KAAK2B,WAAWU,KAAI,SAAAC,GAAQ,OAC3B/B,EAAA,UAAQqB,MAAOU,EAASC,GAAIrE,IAAKoE,EAASC,IACvCD,EAASE,KACH,OAOnBjC,EAAA,OAAKJ,UAAU,cACbI,EAACC,IAAM,CACLL,UAAU,yBACViB,KAAK,SACLX,QAAS,WACPgC,QAAQC,IAAI,uBAAwBC,KAAKC,UAAUtC,EAAKa,cACxDb,EAAKJ,MAAM2C,SAASvC,EAAKa,aACzBb,EAAKK,MACP,GACD,kBAOX,EAACE,CAAA,CAlL6C,CAASD,KCMpCkC,EAA0B,SAAApD,GAAA,SAAAoD,IAAA,OAAApD,EAAAC,MAAA,KAAAC,YAAA,KAAAN,EAAAwD,EAAApD,GAAA,IAAAG,EAAAiD,EAAApE,UAyZ5C,OAzZ4CmB,EAC7CC,OAAA,SAAOC,GACLL,EAAAhB,UAAMoB,OAAMlB,KAAC,KAAAmB,GAEbC,KAAK+C,SAAU,EACf/C,KAAKgD,QAAU,GACfhD,KAAK2B,WAAa,GAGlB3B,KAAKiD,SAAW,CACd7B,KAAM,KACNE,SAAU,GACVE,OAAQ,GACRC,SAAU,GACVC,YAAa,MAGf1B,KAAKkD,YAAc,CACjBV,KAAM,GACNW,YAAa,IAIfnD,KAAKoD,cACLpD,KAAKqD,gBACP,EAACxD,EAEDM,UAAA,WACE,MAAO,yCACT,EAACN,EAEDO,MAAA,WACE,MAAO,2BACT,EAACP,EAEDuD,YAAA,WAAc,IAAA9C,EAAA,KACZN,KAAK+C,SAAU,EACfO,IAAAA,QAAY,CACVC,OAAQ,MACRC,IAAKF,IAAAA,MAAUG,UAAU,UAAY,mBACpCC,MAAK,SAAAC,GACNrD,EAAK0C,QAAUW,EAAOC,MAAQ,GAC9BtD,EAAKyC,SAAU,EACfxC,EAAEwB,QACJ,IAAE,OAAO,SAAA8B,GACPvD,EAAKyC,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,0CAA4CyC,EAAME,SACnFxD,EAAEwB,QACJ,GACF,EAAClC,EAEDwD,eAAA,WAAiB,IAAAW,EAAA,KACfV,IAAAA,QAAY,CACVC,OAAQ,MACRC,IAAKF,IAAAA,MAAUG,UAAU,UAAY,8BACpCC,MAAK,SAAAC,GACNK,EAAKrC,WAAagC,EAAOC,MAAQ,GACjCrD,EAAEwB,QACJ,IAAE,OAAO,SAAA8B,GACPP,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,6CAA+CyC,EAAME,QACxF,GACF,EAAClE,EAEDoE,UAAA,WAAY,IAAAC,EAAA,KACLlE,KAAKmE,kBAIVnE,KAAK+C,SAAU,EAEfO,IAAAA,QAAY,CACVC,OAAQ,OACRC,IAAKF,IAAAA,MAAUG,UAAU,UAAY,iBACrCW,KAAM,CAACR,KAAM,CAACrC,WAAYvB,KAAKiD,aAC9BS,MAAK,SAACC,GAEPO,EAAKjB,SAAW,CACd7B,KAAM,KACNE,SAAU,GACVE,OAAQ,GACRC,SAAU,GACVC,YAAa,MAIfwC,EAAKd,cAELE,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,WAAY,sCACrC,IAAE,OAAO,SAAAyC,GACPK,EAAKnB,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,uCAAyCyC,EAAME,SAChFxD,EAAEwB,QACJ,IACF,EAAClC,EAEDsE,cAAA,WACE,MAA2B,OAAvBnE,KAAKiD,SAAS7B,MAAkBpB,KAAKiD,SAAS3B,WAK7CtB,KAAKiD,SAASzB,SACjB8B,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,mCAC1B,IANPkC,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,8CAC1B,EASX,EAEAvB,EACAwB,aAAA,SAAapB,GAEX,OAAIA,EAAMsB,YAActB,EAAMsB,WAAWH,KAChCnB,EAAMsB,WAAWH,KAItBnB,EAAMmB,MAAuB,eAAfnB,EAAMmB,KACfnB,EAAMmB,KAIR,IACT,EAEAvB,EACAwE,cAAA,SAAcpE,GAEZ,IAEmBqE,EAAnB,GAAa,OAFAtE,KAAKqB,aAAapB,GAG7B,OAAOA,EAAMqB,WAA4B,OAApBgD,EAAIrE,EAAMsB,iBAAU,EAAhB+C,EAAkBhD,WAAY,gBAClD,IAAAiD,EAECnE,EAAQH,EAAMqB,WAA4B,OAApBiD,EAAItE,EAAMsB,iBAAU,EAAhBgD,EAAkBjD,UAElD,GAAIlB,EACF,OAAOA,EAIT,IAAMC,EAAUL,KAAKwE,gBAAgBvE,GACrC,GAAII,GAAuB,iBAAZA,EAA4B,KAAAoE,EAEnCC,EAAiBrE,EAAQsE,UAAU,EAAG,KAAOtE,EAAQ8B,OAAS,GAAK,MAAQ,IAG3EV,EAAWxB,EAAMwB,WAA4B,OAApBgD,EAAIxE,EAAMsB,iBAAU,EAAhBkD,EAAkBhD,UACrD,GAAIA,EAAU,CACZ,IAAMmD,EAAenD,EAASoD,MAAM,KAAK,GAAGC,OAC5C,GAAIF,EACF,OAAOA,EAAe,KAAOF,CAEjC,CAEA,OAAOA,CACT,CAEA,MAAO,YAEX,EAEA7E,EACA2E,gBAAA,SAAgBvE,GAAO,IAAA8E,EAAAC,EACrB,OAAO/E,EAAMuB,SAA0B,OAApBuD,EAAI9E,EAAMsB,iBAAU,EAAhBwD,EAAkBvD,SAAUvB,EAAMI,UAA2B,OAApB2E,EAAI/E,EAAMsB,iBAAU,EAAhByD,EAAkB3E,UAAW,cACnG,EAEAR,EACAoF,iBAAA,SAAiBhF,GAAO,IAAAiF,EACtB,OAAOjF,EAAMwB,WAA4B,OAApByD,EAAIjF,EAAMsB,iBAAU,EAAhB2D,EAAkBzD,WAAY,QACzD,EAAC5B,EAEDsF,UAAA,SAAUlF,GAAO,IAAAmF,EAAA,KACf9B,IAAAA,MAAUQ,KAAKjD,EAA6B,CAC1CZ,MAAOA,EACP0B,WAAY3B,KAAK2B,WACjBkB,SAAU,SAAC1B,GACTiE,EAAKrC,SAAU,EAEfO,IAAAA,QAAY,CACVC,OAAQ,QACRC,IAAQF,IAAAA,MAAUG,UAAU,UAAS,kBAAkBxD,EAAMsC,GAC7D6B,KAAM,CAACR,KAAM,CAACrC,WAAYJ,MACzBuC,MAAK,SAAAC,GAEN,IAAM0B,EAAQD,EAAKpC,QAAQsC,WAAU,SAAApG,GAAC,OAAIA,EAAEqD,KAAOtC,EAAMsC,EAAE,KAC5C,IAAX8C,IACFD,EAAKpC,QAAQqC,GAAS1B,EAAOC,MAG/BwB,EAAKrC,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,WAAY,yCACnCb,EAAEwB,QACJ,IAAE,OAAO,SAAA8B,GACPuB,EAAKrC,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,0CAA4CyC,EAAME,SACnFxD,EAAEwB,QACJ,GACF,GAEJ,EAAClC,EAED0F,YAAA,SAAYtF,GAAO,IAAAuF,EAAA,KACjBlC,IAAAA,MAAUQ,KAAKrE,EAA+B,CAC5CQ,MAAOA,EACPS,UAAW,WACT8E,EAAKzC,SAAU,EAEfO,IAAAA,QAAY,CACVC,OAAQ,SACRC,IAAQF,IAAAA,MAAUG,UAAU,UAAS,kBAAkBxD,EAAMsC,KAC5DmB,MAAK,WACN8B,EAAKxC,QAAUwC,EAAKxC,QAAQyC,QAAO,SAAAvG,GAAC,OAAIA,EAAEqD,KAAOtC,EAAMsC,EAAE,IACzDiD,EAAKzC,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,WAAY,yCACnCb,EAAEwB,QACJ,IAAE,OAAO,SAAA8B,GACP2B,EAAKzC,SAAU,EACfO,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,0CAA4CyC,EAAME,SACnFxD,EAAEwB,QACJ,GACF,GAEJ,EAAClC,EAEDQ,QAAA,WAAU,IAAAqF,EAAA,KACR,OACEnF,EAAA,OAAKJ,UAAU,cACbI,EAAA,OAAKJ,UAAU,QACbI,EAAA,OAAKJ,UAAU,cACbI,EAAA,UAAI,4BAEJA,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,QACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAKiD,SAAS7B,KACrBS,SAAU,SAAC3C,GACTwG,EAAKzC,SAAS7B,KAAOlC,EAAE4C,OAAOF,MAC9BrB,EAAEwB,QACJ,GAEAxB,EAAA,UAAQqB,MAAM,MAAK,YACnBrB,EAAA,UAAQqB,MAAM,WAAU,mBAKN,OAAvB5B,KAAKiD,SAAS7B,MACbb,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,YACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKiD,SAAS3B,SACrBU,QAAS,SAAC9C,GACRwG,EAAKzC,SAAS3B,SAAWpC,EAAE4C,OAAOF,KACpC,MAMgB,YAAvB5B,KAAKiD,SAAS7B,MACbb,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,oBACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKiD,SAAS3B,SACrBW,YAAY,mCACZD,QAAS,SAAC9C,GACRwG,EAAKzC,SAAS3B,SAAWpC,EAAE4C,OAAOF,KACpC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,uEAM9BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAA+B,OAAvBP,KAAKiD,SAAS7B,KAAgB,SAAW,WACjDb,EAAA,OAAKJ,UAAU,yBACbI,EAAA,YACEJ,UAAU,cACV+B,KAAK,IACLN,MAAO5B,KAAKiD,SAASzB,OACrBQ,QAAS,SAAC9C,GACRwG,EAAKzC,SAASzB,OAAStC,EAAE4C,OAAOF,KAClC,MAKNrB,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,8BACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLQ,MAAO5B,KAAKiD,SAASxB,SACrBO,QAAS,SAAC9C,GACRwG,EAAKzC,SAASxB,SAAWvC,EAAE4C,OAAOF,KACpC,KAGJrB,EAAA,OAAKJ,UAAU,YAAW,wEAK3BH,KAAK2B,WAAWQ,OAAS,GACxB5B,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,YACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAKiD,SAASvB,YACrBG,SAAU,SAAC3C,GACTwG,EAAKzC,SAASvB,YAAcxC,EAAE4C,OAAOF,MAAQQ,SAASlD,EAAE4C,OAAOF,OAAS,IAC1E,GAEArB,EAAA,UAAQqB,MAAM,IAAG,yBAChB5B,KAAK2B,WAAWU,KAAI,SAAAC,GAAQ,OAC3B/B,EAAA,UAAQqB,MAAOU,EAASC,GAAIrE,IAAKoE,EAASC,IACvCD,EAASE,KACH,OAOnBjC,EAAA,OAAKJ,UAAU,cACbI,EAACC,IAAM,CACLL,UAAU,yBACV4C,QAAS/C,KAAK+C,QACdtC,QAAS,WAAF,OAAQiF,EAAKzB,WAAW,GAChC,eAML1D,EAAA,OAAKJ,UAAU,cACbI,EAAA,UAAI,0BAEHP,KAAK+C,SAAWxC,EAACoF,IAAgB,OAEhC3F,KAAK+C,SAAmC,IAAxB/C,KAAKgD,QAAQb,QAC7B5B,EAAA,OAAKJ,UAAU,YAAW,iEAG1BH,KAAK+C,SAAW/C,KAAKgD,QAAQb,OAAS,GACtC5B,EAAA,OAAKJ,UAAU,wBACbI,EAAA,SAAOJ,UAAU,8BACfI,EAAA,aACEA,EAAA,UACEA,EAAA,UAAI,QACJA,EAAA,UAAI,kBACJA,EAAA,UAAI,kBACJA,EAAA,UAAI,YACJA,EAAA,UAAI,aAGRA,EAAA,aACGP,KAAKgD,QAAQX,KAAI,SAAApC,GAAK,OACrBM,EAAA,MAAIrC,IAAK+B,EAAMsC,IACbhC,EAAA,UAAkC,OAA7BmF,EAAKrE,aAAapB,GAAkB,MAAQ,WACjDM,EAAA,UACGmF,EAAKrB,cAAcpE,IAEtBM,EAAA,UACEA,EAAA,OAAKJ,UAAU,gCACZuF,EAAKlB,gBAAgBvE,KAG1BM,EAAA,UAAKmF,EAAKT,iBAAiBhF,IAC3BM,EAAA,UACEA,EAAA,OAAKJ,UAAU,eACbI,EAACC,IAAM,CACLL,UAAU,sBACVyF,KAAK,cACLnF,QAAS,WAAF,OAAQiF,EAAKP,UAAUlF,EAAM,EACpCG,MAAM,SAERG,EAACC,IAAM,CACLL,UAAU,sBACVyF,KAAK,eACLnF,QAAS,WAAF,OAAQiF,EAAKH,YAAYtF,EAAM,EACtCG,MAAM,aAIT,SAUzB,EAAC0C,CAAA,CAzZ4C,CAASlC,KCVxD,MAAM,EAA+B/B,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,mHCOxD,IAGqB8G,EAAiB,SAAAnG,GAAA,SAAAmG,IAAA,OAAAnG,EAAAC,MAAA,KAAAC,YAAA,KAAAN,EAAAuG,EAAAnG,GAAA,IAAAG,EAAAgG,EAAAnH,UAsUnC,OAtUmCmB,EACpCC,OAAA,SAAOC,GACLL,EAAAhB,UAAMoB,OAAMlB,KAAC,KAAAmB,GAEbC,KAAK+C,SAAU,EACf/C,KAAK8F,MAAQ,KACb9F,KAAK+F,OAAS,MACd/F,KAAKgG,OAAS,cACdhG,KAAKiG,QAAU,OACfjG,KAAKkG,YAAc,GACnBlG,KAAK6D,MAAQ,KAGb7D,KAAKmG,WACP,EAACtG,EAEDM,UAAA,WACE,MAAO,4CACT,EAACN,EAEDO,MAAA,WACE,OAAOkD,IAAAA,WAAe8C,MAAM,iDAC9B,EAACvG,EAEDsG,UAAA,WAAY,IAAA7F,EAAA,KACVN,KAAK+C,SAAU,EACf/C,KAAK6D,MAAQ,KAEbP,IAAAA,QAAY,CACVC,OAAQ,MACRC,IAAKF,IAAAA,MAAUG,UAAU,UAAY,oBACrC4C,OAAQ,CAAEN,OAAQ/F,KAAK+F,UACtBrC,MAAK,SAAAC,GAENrD,EAAKwF,MAAQnC,EACbrD,EAAKyC,SAAU,EACfxC,EAAEwB,QACJ,IAAE,OAAO,SAAA8B,GACPvD,EAAKyC,SAAU,EACfzC,EAAKuD,MAAQA,EACbP,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAUkC,IAAAA,WAAe8C,MAAM,wDACtD7F,EAAEwB,QACJ,GACF,EAAClC,EAEDyG,aAAA,SAAaP,GACX/F,KAAK+F,OAASA,EACd/F,KAAKmG,WACP,EAACtG,EAED0G,UAAA,SAAUC,GACJxG,KAAKgG,SAAWQ,EAClBxG,KAAKiG,QAA2B,QAAjBjG,KAAKiG,QAAoB,OAAS,OAEjDjG,KAAKgG,OAASQ,EACdxG,KAAKiG,QAAU,QAGjB1F,EAAEwB,QACJ,EAAClC,EAED4G,aAAA,WAEE,OAAIzG,KAAK8F,OAAS9F,KAAK8F,MAAMY,MAAQ1G,KAAK8F,MAAMY,KAAKC,YAAcC,MAAMC,QAAQ7G,KAAK8F,MAAMY,KAAKC,YACxF3G,KAAK8F,MAAMY,KAAKC,WAGrB3G,KAAK8F,OAAS9F,KAAK8F,MAAMa,YAAcC,MAAMC,QAAQ7G,KAAK8F,MAAMa,YAC3D3G,KAAK8F,MAAMa,WAIb,CACL,CACEG,QAAS,EACTC,SAAU,QACVC,aAAc,eACdC,YAAa,GACbC,WAAW,IAAIC,MAAOC,eAExB,CACEN,QAAS,EACTC,SAAU,YACVC,aAAc,gBACdC,YAAa,GACbC,UAAW,IAAIC,KAAKA,KAAKE,MAAQ,OAAUD,eAGjD,EAACvH,EAEDyH,eAAA,WAAiB,IAAAtD,EAAA,KACTuD,EAAQvH,KAAKyG,eAGfe,EAAgBD,EACpB,GAAIvH,KAAKkG,YAAa,CACpB,IAAMuB,EAAQzH,KAAKkG,YAAYwB,cAC/BF,EAAgBD,EAAM9B,QAAO,SAAAkC,GAAI,OAC/BA,EAAKZ,SAASW,cAAcE,SAASH,IACpCE,EAAKX,cAAgBW,EAAKX,aAAaU,cAAcE,SAASH,EAAO,GAE1E,CAGA,OAAOD,EAAcK,MAAK,SAAC9J,EAAG+J,GAC5B,IAAIC,EAAShK,EAAEiG,EAAKgC,QAChBgC,EAASF,EAAE9D,EAAKgC,QAQpB,MALoB,cAAhBhC,EAAKgC,SACP+B,EAAS,IAAIZ,KAAKY,GAAQE,UAC1BD,EAAS,IAAIb,KAAKa,GAAQC,WAGP,QAAjBjE,EAAKiC,QACA8B,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,CAElC,GACF,EAACnI,EAEDqI,YAAA,SAAY1B,GACV,OAAIxG,KAAKgG,SAAWQ,EAAc,GAEV,QAAjBxG,KAAKiG,QACRL,IAAK,kBACLA,IAAK,mBACX,EAAC/F,EAEDQ,QAAA,WAAU,IAAA6D,EAAA,KACR,GAAIlE,KAAK+C,QACP,OACExC,EAAA,OAAKJ,UAAU,cACbI,EAACoF,IAAgB,OAKvB,GAAI3F,KAAK6D,MACP,OACEtD,EAAA,OAAKJ,UAAU,cACbI,EAAA,OAAKJ,UAAU,sBACbI,EAAA,SAAI+C,IAAAA,WAAe8C,MAAM,wDACzB7F,EAAA,WAAMoC,KAAKC,UAAU5C,KAAK6D,MAAO,KAAM,IACvCtD,EAACC,IAAM,CAACL,UAAU,yBAAyBM,QAAS,WAAF,OAAQyD,EAAKiC,WAAW,GACvE7C,IAAAA,WAAe8C,MAAM,qDAOhC,IAAKpG,KAAK8F,MACR,OACEvF,EAAA,OAAKJ,UAAU,cACbI,EAAA,OAAKJ,UAAU,sBACZmD,IAAAA,WAAe8C,MAAM,sDAM9B,IAAMmB,EAAQvH,KAAKsH,iBAGfa,EAAa,EACbC,EAAa,EACbC,EAAiB,EACjBC,EAAcf,EAAMpF,OAGxB,GAAInC,KAAK8F,MAAMlC,MAAQgD,MAAMC,QAAQ7G,KAAK8F,MAAMlC,MAC9C,IAAK,IAA6B2E,EAAlCC,E,4rBAAAC,CAAmBzI,KAAK8F,MAAMlC,QAAI2E,EAAAC,KAAAE,MAAE,KAAzBC,EAAIJ,EAAA3G,MACb,GAAI+G,GAAQA,EAAKpH,WAAY,CAC3B4G,EAAaQ,EAAKpH,WAAWqH,aAAeT,EAC5CC,EAAaO,EAAKpH,WAAWsH,aAAeT,EAC5CC,EAAiBM,EAAKpH,WAAWuH,iBAAmBT,EACpDC,EAAcK,EAAKpH,WAAWwH,cAAgBT,EAC9C,KACF,CACF,CAGF,OACE/H,EAAA,OAAKJ,UAAU,cACbI,EAAA,OAAKJ,UAAU,gBACbI,EAAA,OAAKJ,UAAU,wBACbI,EAAA,OAAKJ,UAAU,4BACbI,EAAA,OAAKJ,UAAU,6BAA6BgI,GAC5C5H,EAAA,OAAKJ,UAAU,6BAA6BmD,IAAAA,WAAe8C,MAAM,0DAEnE7F,EAAA,OAAKJ,UAAU,4BACbI,EAAA,OAAKJ,UAAU,6BAA6BiI,GAC5C7H,EAAA,OAAKJ,UAAU,6BAA6BmD,IAAAA,WAAe8C,MAAM,0DAEnE7F,EAAA,OAAKJ,UAAU,4BACbI,EAAA,OAAKJ,UAAU,6BAA6BkI,GAC5C9H,EAAA,OAAKJ,UAAU,6BAA6BmD,IAAAA,WAAe8C,MAAM,8DAEnE7F,EAAA,OAAKJ,UAAU,4BACbI,EAAA,OAAKJ,UAAU,6BAA6BmI,GAC5C/H,EAAA,OAAKJ,UAAU,6BAA6BmD,IAAAA,WAAe8C,MAAM,4DAIrE7F,EAAA,OAAKJ,UAAU,wBACbI,EAAA,OAAKJ,UAAU,6BACbI,EAACyI,IAAQ,CACPC,MAAO3F,IAAAA,WAAe8C,MAAM,mDAAqDpG,KAAK+F,QACtFmD,gBAAgB,0BAEhB3I,EAACC,IAAM,CACLL,UAAU,gBACVM,QAAS,WAAF,OAAQyD,EAAKoC,aAAa,MAAM,EACvC6C,OAAwB,QAAhBnJ,KAAK+F,QAEZzC,IAAAA,WAAe8C,MAAM,wDAExB7F,EAACC,IAAM,CACLL,UAAU,gBACVM,QAAS,WAAF,OAAQyD,EAAKoC,aAAa,QAAQ,EACzC6C,OAAwB,UAAhBnJ,KAAK+F,QAEZzC,IAAAA,WAAe8C,MAAM,0DAExB7F,EAACC,IAAM,CACLL,UAAU,gBACVM,QAAS,WAAF,OAAQyD,EAAKoC,aAAa,YAAY,EAC7C6C,OAAwB,cAAhBnJ,KAAK+F,QAEZzC,IAAAA,WAAe8C,MAAM,8DAExB7F,EAACC,IAAM,CACLL,UAAU,gBACVM,QAAS,WAAF,OAAQyD,EAAKoC,aAAa,OAAO,EACxC6C,OAAwB,SAAhBnJ,KAAK+F,QAEZzC,IAAAA,WAAe8C,MAAM,yDAExB7F,EAACC,IAAM,CACLL,UAAU,gBACVM,QAAS,WAAF,OAAQyD,EAAKoC,aAAa,QAAQ,EACzC6C,OAAwB,UAAhBnJ,KAAK+F,QAEZzC,IAAAA,WAAe8C,MAAM,4DAK5B7F,EAAA,OAAKJ,UAAU,uBACbI,EAAA,SACEa,KAAK,OACLjB,UAAU,cACV8B,YAAaqB,IAAAA,WAAe8C,MAAM,+DAClCxE,MAAO5B,KAAKkG,YACZlE,QAAS,SAAA9C,GACPgF,EAAKgC,YAAchH,EAAE4C,OAAOF,MAC5BrB,EAAEwB,QACJ,KAIJxB,EAAA,OAAKJ,UAAU,wBACbI,EAACC,IAAM,CACLL,UAAU,sBACVyF,KAAK,kBACLnF,QAAS,WAAF,OAAQyD,EAAKiC,WAAW,EAC/B/F,MAAOkD,IAAAA,WAAe8C,MAAM,wDAKlC7F,EAAA,OAAKJ,UAAU,sBACbI,EAAA,SAAOJ,UAAU,SACfI,EAAA,aACEA,EAAA,UACEA,EAAA,MACEJ,UAAU,mDACVM,QAAS,WAAF,OAAQyD,EAAKqC,UAAU,WAAW,GAExCjD,IAAAA,WAAe8C,MAAM,uDACrBpG,KAAKkI,YAAY,aAEpB3H,EAAA,MACEJ,UAAU,oDACVM,QAAS,WAAF,OAAQyD,EAAKqC,UAAU,cAAc,GAE3CjD,IAAAA,WAAe8C,MAAM,wDACrBpG,KAAKkI,YAAY,gBAEpB3H,EAAA,MACEJ,UAAU,mDACVM,QAAS,WAAF,OAAQyD,EAAKqC,UAAU,YAAY,GAEzCjD,IAAAA,WAAe8C,MAAM,4DACrBpG,KAAKkI,YAAY,gBAIxB3H,EAAA,aACoB,IAAjBgH,EAAMpF,OACL5B,EAAA,UACEA,EAAA,MAAI6I,QAAQ,IAAIjJ,UAAU,wBACvBmD,IAAAA,WAAe8C,MAAM,uDAGxBmB,EAAMlF,KAAI,SAAAsF,GAAI,OAChBpH,EAAA,MAAIrC,IAAKyJ,EAAKb,SACZvG,EAAA,MAAIJ,UAAU,yBACXwH,EAAKX,cAAgBW,EAAKZ,UAE7BxG,EAAA,MAAIJ,UAAU,0BACXwH,EAAKV,aAER1G,EAAA,MAAIJ,UAAU,yBACX,IAAIgH,KAAKQ,EAAKT,WAAWmC,sBAEzB,QAQrB,EAACxD,CAAA,CAtUmC,CAASjF,KCJ1B0I,EAAc,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA5J,MAAA,KAAAC,YAAA,KAAAN,EAAAgK,EAAAC,GAAA,IAAA1J,EAAAyJ,EAAA5K,UAoThC,OApTgCmB,EACjCC,OAAA,SAAOC,GACLwJ,EAAA7K,UAAMoB,OAAMlB,KAAC,KAAAmB,EACf,EAACF,EAEDQ,QAAA,WACE,OACEE,EAAA,OAAKJ,UAAU,kBACbI,EAAA,OAAKJ,UAAU,aACZH,KAAKwJ,qBAId,EAAC3J,EAED2J,kBAAA,WAAoB,IAAAlJ,EAAA,KAClB,OACEC,EAAA,OAAKJ,UAAU,QACbI,EAAA,UAAI,8BAEJA,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,4BACPA,EAACkJ,IAAM,CACLC,MAAO1J,KAAK2J,QAAQ,iCAAb3J,GACP6B,SAAU7B,KAAK2J,QAAQ,mCACxB,4BAGDpJ,EAAA,OAAKJ,UAAU,YAAW,wDAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,eACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAK2J,QAAQ,kCAAb3J,GACP6B,SAAU,SAAA3C,GAAC,OAAIoB,EAAKqJ,QAAQ,kCAAbrJ,CAAgDpB,EAAE4C,OAAOF,MAAM,GAE9ErB,EAAA,UAAQqB,MAAM,UAAS,kBACvBrB,EAAA,UAAQqB,MAAM,YAAW,YACzBrB,EAAA,UAAQqB,MAAM,UAAS,UACvBrB,EAAA,UAAQqB,MAAM,UAAS,YAG3BrB,EAAA,OAAKJ,UAAU,YAAW,4DAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,WACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,WACLwI,KAAM5J,KAAK2J,QAAQ,qCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,qDAK5BI,EAAA,UAAI,kBAEJA,EAAA,OAAKJ,UAAU,cACbI,EAACkJ,IAAM,CACLC,MAAO1J,KAAK2J,QAAQ,0CAAb3J,GACP6B,SAAU7B,KAAK2J,QAAQ,4CACxB,2BAGDpJ,EAAA,OAAKJ,UAAU,YAAW,qDAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,cACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLa,YAAY,YACZ2H,KAAM5J,KAAK2J,QAAQ,wCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,oDAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,cACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACLyI,IAAI,IACJC,IAAI,QACJ7H,YAAY,OACZ2H,KAAM5J,KAAK2J,QAAQ,wCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,8CAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,cACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,OACLa,YAAY,kCACZ2H,KAAM5J,KAAK2J,QAAQ,wCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,sEAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,cACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACLyI,IAAI,MACJC,IAAI,OACJF,KAAM5J,KAAK2J,QAAQ,wCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,0DAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,mBACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACLyI,IAAI,IACJC,IAAI,MACJF,KAAM5J,KAAK2J,QAAQ,qCAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,4CAK5BI,EAAA,UAAI,wBAEJA,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,wBACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACLyI,IAAI,IACJD,KAAM5J,KAAK2J,QAAQ,kDAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,oDAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,oBACPA,EAAA,UACEJ,UAAU,SACViB,KAAK,SACLX,QAAS,WAAF,OAAQ6C,IAAAA,MAAUQ,KAAK+B,EAAkB,GACjD,yBAGDtF,EAAA,OAAKJ,UAAU,YAAW,sDAK5BI,EAAA,UAAI,oBAEJA,EAAA,OAAKJ,UAAU,cACbI,EAACkJ,IAAM,CACLC,MAAO1J,KAAK2J,QAAQ,yCAAb3J,GACP6B,SAAU7B,KAAK2J,QAAQ,2CACxB,iCAGDpJ,EAAA,OAAKJ,UAAU,YAAW,oDAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,uBACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACLyI,IAAI,IACJC,IAAI,KACJF,KAAM5J,KAAK2J,QAAQ,0CAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,+DAK5BI,EAAA,UAAI,2BAEJA,EAAA,OAAKJ,UAAU,cACbI,EAACkJ,IAAM,CACLC,MAAO1J,KAAK2J,QAAQ,oCAAb3J,GACP6B,SAAU7B,KAAK2J,QAAQ,sCACxB,yBAGDpJ,EAAA,OAAKJ,UAAU,YAAW,6EAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,gCACPA,EAAA,OAAKJ,UAAU,yBACbI,EAAA,SACEJ,UAAU,cACViB,KAAK,SACL2I,KAAK,MACLF,IAAI,MACJC,IAAI,IACJF,KAAM5J,KAAK2J,QAAQ,8CAGvBpJ,EAAA,OAAKJ,UAAU,YAAW,qEAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,UACEJ,UAAU,SACViB,KAAK,SACLX,QAAS,WAAF,OAAQH,EAAK0J,wBAAwB,GAC7C,iCAGDzJ,EAAA,OAAKJ,UAAU,YAAW,kEAK5BI,EAAA,UAAI,mBAEJA,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,mBACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAK2J,QAAQ,yCAAb3J,GACP6B,SAAU,SAAA3C,GAAC,OAAIoB,EAAKqJ,QAAQ,yCAAbrJ,CAAuDpB,EAAE4C,OAAOF,MAAM,GAErFrB,EAAA,UAAQqB,MAAM,gBAAe,gBAC7BrB,EAAA,UAAQqB,MAAM,eAAc,iBAGhCrB,EAAA,OAAKJ,UAAU,YAAW,kEAK5BI,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,SACPA,EAAA,OAAKJ,UAAU,UACbI,EAAA,UACEJ,UAAU,cACVyB,MAAO5B,KAAK2J,QAAQ,+BAAb3J,GACP6B,SAAU,SAAA3C,GAAC,OAAIoB,EAAKqJ,QAAQ,+BAAbrJ,CAA6CpB,EAAE4C,OAAOF,MAAM,GAE3ErB,EAAA,UAAQqB,MAAM,SAAQ,SACtBrB,EAAA,UAAQqB,MAAM,QAAO,QACrBrB,EAAA,UAAQqB,MAAM,QAAO,0BAGzBrB,EAAA,OAAKJ,UAAU,YAAW,gDAK3BH,KAAKiK,eAGZ,EAACpK,EAEDmK,uBAAA,WACE1G,IAAAA,MAAUQ,KAAKhB,EACjB,EAACwG,CAAA,CApTgC,CAASY,KCF5C5G,IAAAA,aAAiB6G,IAAI,0BCEN,WAEb7G,IAAAA,cAAiB,IACV,0BAEJ8G,gBAAgB,CACfT,QAAS,iCACTvI,KAAM,UACN6H,MAAO,2BACPoB,SAAS,IAEVD,gBAAgB,CACfT,QAAS,kCACTvI,KAAM,SACN6H,MAAO,cACPqB,QAAS,CACP,OAAU,iBACV,SAAY,WACZ,OAAU,SACV,OAAU,UAEZD,QAAS,WAEVD,gBAAgB,CACfT,QAAS,iCACTvI,KAAM,OACN6H,MAAO,YAERmB,gBAAgB,CACfT,QAAS,oCACTvI,KAAM,OACN6H,MAAO,aACPoB,QAAS,gBACTpI,YAAa,oCAEdmI,gBAAgB,CACfT,QAAS,oCACTvI,KAAM,SACN6H,MAAO,aACPoB,QAAS,IACTR,IAAK,IACLC,IAAK,MAENM,gBAAgB,CACfT,QAAS,iCACTvI,KAAM,SACN6H,MAAO,kBACPsB,KAAM,yCACNF,QAAS,GACTR,IAAK,EACLC,IAAK,MAGNM,iBAAgB,kBAAM7J,EAAA,UAAI,uBAAyB,IACnD6J,gBAAgB,CACfT,QAAS,8CACTvI,KAAM,SACN6H,MAAO,uBACPsB,KAAM,iDACNF,QAAS,GACTR,IAAK,EACLhI,SAAU,SAASD,GACjB,IAAI4I,EAAWpI,SAASR,EAAO,IAC/B,OAAI6I,MAAMD,IAAaA,EAAW,GAChClH,IAAAA,OAAWQ,KAAK,CAAC1C,KAAM,SAAU,0CAC1B,GAEFoJ,CACT,IAEDJ,gBAAgB,CACfT,QAAS,qCACTvI,KAAM,SACNsJ,UAAW,WACT,OACEnK,EAAA,OAAKJ,UAAU,cACbI,EAAA,aAAO,oBACPA,EAAA,UACEJ,UAAU,SACVM,QAAS,WAAF,OAAQ6C,IAAAA,MAAUQ,KAAK+B,EAAkB,GACjD,yBAGDtF,EAAA,OAAKJ,UAAU,YAAW,oDAKhC,IAGDiK,iBAAgB,kBAAM7J,EAAA,UAAI,mBAAqB,IAC/C6J,gBAAgB,CACfT,QAAS,yCACTvI,KAAM,UACN6H,MAAO,gCACPsB,KAAM,iDACNF,SAAS,IAEVD,gBAAgB,CACfT,QAAS,sCACTvI,KAAM,SACN6H,MAAO,sBACPsB,KAAM,4DACNF,QAAS,GACTR,IAAK,EACLC,IAAK,KAGNM,iBAAgB,kBAAM7J,EAAA,UAAI,0BAA4B,IACtD6J,gBAAgB,CACfT,QAAS,oCACTvI,KAAM,UACN6H,MAAO,wBACPoB,SAAS,IAEVD,gBAAgB,CACfT,QAAS,0CACTvI,KAAM,SACN6H,MAAO,+BACPsB,KAAM,kEACNF,QAAS,IACTR,IAAK,GACLC,IAAK,EACLC,KAAM,KAEPK,gBAAgB,CACfnB,MAAO,4BACPU,QAAS,uCACTvI,KAAM,SACNsJ,UAAW,WACT,OACEnK,EAAA,OAAKJ,UAAU,cACbI,EAAA,UACEJ,UAAU,SACVM,QAAS,WAAF,OAAQ6C,IAAAA,MAAUQ,KAAKhB,EAA2B,GAC1D,iCAGDvC,EAAA,OAAKJ,UAAU,YAAW,gEAKhC,IAGDiK,iBAAgB,kBAAM7J,EAAA,UAAI,kBAAoB,IAC9C6J,gBAAgB,CACfT,QAAS,yCACTvI,KAAM,SACN6H,MAAO,kBACPqB,QAAS,CACP,eAAgB,eAChB,cAAe,eAEjBD,QAAS,iBAEVD,gBAAgB,CACfT,QAAS,+BACTvI,KAAM,SACN6H,MAAO,QACPqB,QAAS,CACP,MAAS,QACT,KAAQ,OACR,KAAQ,wBAEVD,QAAS,SAGVM,mBAAmB,CAClB/E,KAAM,eACNqD,MAAO,iBACP2B,WAAY,6BACZC,YAAY,GACX,SACFF,mBAAmB,CAClB/E,KAAM,kBACNqD,MAAO,wBACP2B,WAAY,6CACZC,YAAY,GACX,YAGLvH,IAAAA,cAAiB,IACV,0BACJwH,aAAaxB,EAClB,G","sources":["webpack://leot/flarum-ai-support-widget/webpack/bootstrap","webpack://leot/flarum-ai-support-widget/webpack/runtime/compat get default export","webpack://leot/flarum-ai-support-widget/webpack/runtime/define property getters","webpack://leot/flarum-ai-support-widget/webpack/runtime/hasOwnProperty shorthand","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['admin/app']\"","webpack://leot/flarum-ai-support-widget/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://leot/flarum-ai-support-widget/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/components/Modal']\"","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/components/Button']\"","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://leot/flarum-ai-support-widget/./js/src/admin/components/DeleteKnowledgeBaseEntryModal.js","webpack://leot/flarum-ai-support-widget/./js/src/admin/components/EditKnowledgeBaseEntryModal.js","webpack://leot/flarum-ai-support-widget/./js/src/admin/components/KnowledgeBaseSettingsModal.js","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/components/Switch']\"","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://leot/flarum-ai-support-widget/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://leot/flarum-ai-support-widget/./js/src/admin/components/AiUsageStatsModal.js","webpack://leot/flarum-ai-support-widget/./js/src/admin/components/AiSettingsPage.js","webpack://leot/flarum-ai-support-widget/./admin.js","webpack://leot/flarum-ai-support-widget/./js/src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/admin/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default class DeleteKnowledgeBaseEntryModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.entry = this.attrs.entry;\r\n  }\r\n  \r\n  className() {\r\n    return 'DeleteKnowledgeBaseEntryModal Modal--small';\r\n  }\r\n  \r\n  title() {\r\n    return 'Confirm Deletion';\r\n  }\r\n  \r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <p>Are you sure you want to delete this knowledge base entry? This action cannot be undone.</p>\r\n        \r\n        <div className=\"Form-group\">\r\n          <Button\r\n            className=\"Button Button--primary Button--danger\"\r\n            onclick={() => {\r\n              this.attrs.onconfirm();\r\n              this.hide();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n          {' '}\r\n          <Button\r\n            className=\"Button\"\r\n            onclick={() => this.hide()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} ","import app from 'flarum/admin/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default class EditKnowledgeBaseEntryModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.entry = this.attrs.entry;\r\n    \r\n    // 确保所有必要的属性都存在\r\n    this.editedEntry = {\r\n      type: this.getEntryType(),\r\n      question: this.entry.question || this.entry.attributes?.question || '',\r\n      answer: this.entry.answer || this.entry.attributes?.answer || this.entry.content || this.entry.attributes?.content || '',\r\n      keywords: this.entry.keywords || this.entry.attributes?.keywords || '',\r\n      category_id: this.entry.category_id || this.entry.attributes?.category_id || null\r\n    };\r\n    \r\n    this.categories = this.attrs.categories || [];\r\n  }\r\n  \r\n  // 获取条目的实际类型\r\n  getEntryType() {\r\n    // 首先尝试从attributes中获取type\r\n    if (this.entry.attributes && this.entry.attributes.type) {\r\n      return this.entry.attributes.type;\r\n    }\r\n    \r\n    // 如果没有attributes或attributes中没有type，则尝试直接获取\r\n    if (this.entry.type && this.entry.type !== 'kb-entries') {\r\n      return this.entry.type;\r\n    }\r\n    \r\n    // 默认返回qa类型\r\n    return 'qa';\r\n  }\r\n  \r\n  className() {\r\n    return 'EditKnowledgeBaseEntryModal Modal--large';\r\n  }\r\n  \r\n  title() {\r\n    return 'Edit Knowledge Base Entry';\r\n  }\r\n  \r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-group\">\r\n            <label>Type</label>\r\n            <div className=\"Select\">\r\n              <select\r\n                className=\"FormControl\"\r\n                value={this.editedEntry.type}\r\n                onchange={(e) => {\r\n                  this.editedEntry.type = e.target.value;\r\n                  m.redraw();\r\n                }}\r\n              >\r\n                <option value=\"qa\">Q&A Type</option>\r\n                <option value=\"content\">Content Type</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"helpText\">\r\n              Current type: {this.editedEntry.type}\r\n            </div>\r\n          </div>\r\n          \r\n          {this.editedEntry.type === 'qa' && (\r\n            <div className=\"Form-group\">\r\n              <label>Question</label>\r\n              <div className=\"FormControl-container\">\r\n                <input\r\n                  className=\"FormControl\"\r\n                  type=\"text\"\r\n                  value={this.editedEntry.question}\r\n                  oninput={(e) => {\r\n                    this.editedEntry.question = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"helpText\">\r\n                Current question: {this.editedEntry.question || '(No question)'}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {this.editedEntry.type === 'content' && (\r\n            <div className=\"Form-group\">\r\n              <label>Title (Optional)</label>\r\n              <div className=\"FormControl-container\">\r\n                <input\r\n                  className=\"FormControl\"\r\n                  type=\"text\"\r\n                  value={this.editedEntry.question}\r\n                  placeholder=\"Optional title for content entry\"\r\n                  oninput={(e) => {\r\n                    this.editedEntry.question = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"helpText\">\r\n                Adding a title helps the AI better match this content. If left empty, a title will be generated from the content.\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"Form-group\">\r\n            <label>{this.editedEntry.type === 'qa' ? 'Answer' : 'Content'}</label>\r\n            <div className=\"FormControl-container\">\r\n              <textarea\r\n                className=\"FormControl\"\r\n                rows=\"5\"\r\n                value={this.editedEntry.answer}\r\n                oninput={(e) => {\r\n                  this.editedEntry.answer = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"helpText\">\r\n              Current content length: {(this.editedEntry.answer || '').length} characters\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"Form-group\">\r\n            <label>Keywords (comma separated)</label>\r\n            <div className=\"FormControl-container\">\r\n              <input\r\n                className=\"FormControl\"\r\n                type=\"text\"\r\n                value={this.editedEntry.keywords}\r\n                oninput={(e) => {\r\n                  this.editedEntry.keywords = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"helpText\">\r\n              Adding keywords helps the AI match relevant content more accurately\r\n              <br />\r\n              Current keywords: {this.editedEntry.keywords || '(None)'}\r\n            </div>\r\n          </div>\r\n          \r\n          {this.categories.length > 0 && (\r\n            <div className=\"Form-group\">\r\n              <label>Category</label>\r\n              <div className=\"Select\">\r\n                <select\r\n                  className=\"FormControl\"\r\n                  value={this.editedEntry.category_id}\r\n                  onchange={(e) => {\r\n                    this.editedEntry.category_id = e.target.value ? parseInt(e.target.value) : null;\r\n                  }}\r\n                >\r\n                  <option value=\"\">-- Select Category --</option>\r\n                  {this.categories.map(category => (\r\n                    <option value={category.id} key={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"Form-group\">\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              type=\"submit\"\r\n              onclick={() => {\r\n                console.log('Saving edited entry:', JSON.stringify(this.editedEntry));\r\n                this.attrs.onsubmit(this.editedEntry);\r\n                this.hide();\r\n              }}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} ","import app from 'flarum/admin/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport DeleteKnowledgeBaseEntryModal from './DeleteKnowledgeBaseEntryModal';\r\nimport EditKnowledgeBaseEntryModal from './EditKnowledgeBaseEntryModal';\r\n\r\n/**\r\n * Knowledge Base Management Modal Component\r\n */\r\nexport default class KnowledgeBaseSettingsModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    \r\n    this.loading = true;\r\n    this.entries = [];\r\n    this.categories = [];\r\n    \r\n    // Form data\r\n    this.newEntry = {\r\n      type: 'qa',\r\n      question: '',\r\n      answer: '',\r\n      keywords: '',\r\n      category_id: null\r\n    };\r\n    \r\n    this.newCategory = {\r\n      name: '',\r\n      description: ''\r\n    };\r\n    \r\n    // Load knowledge base entries\r\n    this.loadEntries();\r\n    this.loadCategories();\r\n  }\r\n  \r\n  className() {\r\n    return 'KnowledgeBaseSettingsModal Modal--large';\r\n  }\r\n  \r\n  title() {\r\n    return 'Knowledge Base Management';\r\n  }\r\n  \r\n  loadEntries() {\r\n    this.loading = true;\r\n    app.request({\r\n      method: 'GET',\r\n      url: app.forum.attribute('apiUrl') + '/ai-support/kb'\r\n    }).then(result => {\r\n      this.entries = result.data || [];\r\n      this.loading = false;\r\n      m.redraw();\r\n    }).catch(error => {\r\n      this.loading = false;\r\n      app.alerts.show({type: 'error'}, 'Failed to load knowledge base entries: ' + error.message);\r\n      m.redraw();\r\n    });\r\n  }\r\n  \r\n  loadCategories() {\r\n    app.request({\r\n      method: 'GET',\r\n      url: app.forum.attribute('apiUrl') + '/ai-support/kb/categories'\r\n    }).then(result => {\r\n      this.categories = result.data || [];\r\n      m.redraw();\r\n    }).catch(error => {\r\n      app.alerts.show({type: 'error'}, 'Failed to load knowledge base categories: ' + error.message);\r\n    });\r\n  }\r\n  \r\n  saveEntry() {\r\n    if (!this.validateEntry()) {\r\n      return;\r\n    }\r\n    \r\n    this.loading = true;\r\n    \r\n    app.request({\r\n      method: 'POST',\r\n      url: app.forum.attribute('apiUrl') + '/ai-support/kb',\r\n      body: {data: {attributes: this.newEntry}}\r\n    }).then((result) => {\r\n      // Reset form\r\n      this.newEntry = {\r\n        type: 'qa',\r\n        question: '',\r\n        answer: '',\r\n        keywords: '',\r\n        category_id: null\r\n      };\r\n      \r\n      // Reload entries\r\n      this.loadEntries();\r\n      \r\n      app.alerts.show({type: 'success'}, 'Knowledge base entry has been added');\r\n    }).catch(error => {\r\n      this.loading = false;\r\n      app.alerts.show({type: 'error'}, 'Failed to add knowledge base entry: ' + error.message);\r\n      m.redraw();\r\n    });\r\n  }\r\n  \r\n  validateEntry() {\r\n    if (this.newEntry.type === 'qa' && !this.newEntry.question) {\r\n      app.alerts.show({type: 'error'}, 'Question is required for Q&A type entries');\r\n      return false;\r\n    }\r\n    \r\n    if (!this.newEntry.answer) {\r\n      app.alerts.show({type: 'error'}, 'Answer/content cannot be empty');\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  // 获取条目的类型\r\n  getEntryType(entry) {\r\n    // 首先尝试从attributes中获取type\r\n    if (entry.attributes && entry.attributes.type) {\r\n      return entry.attributes.type;\r\n    }\r\n    \r\n    // 如果没有attributes或attributes中没有type，则尝试直接获取\r\n    if (entry.type && entry.type !== 'kb-entries') {\r\n      return entry.type;\r\n    }\r\n    \r\n    // 默认返回qa类型\r\n    return 'qa';\r\n  }\r\n  \r\n  // 获取条目的问题/标题\r\n  getEntryTitle(entry) {\r\n    // 获取条目类型\r\n    const type = this.getEntryType(entry);\r\n    \r\n    if (type === 'qa') {\r\n      return entry.question || entry.attributes?.question || '(No question)';\r\n    } else {\r\n      // 对于Content类型，尝试使用question字段作为标题\r\n      const title = entry.question || entry.attributes?.question;\r\n      \r\n      if (title) {\r\n        return title;\r\n      }\r\n      \r\n      // 如果没有标题，尝试从内容生成标题\r\n      const content = this.getEntryContent(entry);\r\n      if (content && content !== '(No content)') {\r\n        // 从内容中提取前30个字符作为标题\r\n        const generatedTitle = content.substring(0, 30) + (content.length > 30 ? '...' : '');\r\n        \r\n        // 如果有关键词，使用第一个关键词作为标题前缀\r\n        const keywords = entry.keywords || entry.attributes?.keywords;\r\n        if (keywords) {\r\n          const firstKeyword = keywords.split(',')[0].trim();\r\n          if (firstKeyword) {\r\n            return firstKeyword + ': ' + generatedTitle;\r\n          }\r\n        }\r\n        \r\n        return generatedTitle;\r\n      }\r\n      \r\n      return '(No title)';\r\n    }\r\n  }\r\n  \r\n  // 获取条目的答案/内容\r\n  getEntryContent(entry) {\r\n    return entry.answer || entry.attributes?.answer || entry.content || entry.attributes?.content || '(No content)';\r\n  }\r\n  \r\n  // 获取条目的关键词\r\n  getEntryKeywords(entry) {\r\n    return entry.keywords || entry.attributes?.keywords || '(None)';\r\n  }\r\n  \r\n  editEntry(entry) {\r\n    app.modal.show(EditKnowledgeBaseEntryModal, {\r\n      entry: entry,\r\n      categories: this.categories,\r\n      onsubmit: (editedEntry) => {\r\n        this.loading = true;\r\n        \r\n        app.request({\r\n          method: 'PATCH',\r\n          url: `${app.forum.attribute('apiUrl')}/ai-support/kb/${entry.id}`,\r\n          body: {data: {attributes: editedEntry}}\r\n        }).then(result => {\r\n          // Update local entry\r\n          const index = this.entries.findIndex(e => e.id === entry.id);\r\n          if (index !== -1) {\r\n            this.entries[index] = result.data;\r\n          }\r\n          \r\n          this.loading = false;\r\n          app.alerts.show({type: 'success'}, 'Knowledge base entry has been updated');\r\n          m.redraw();\r\n        }).catch(error => {\r\n          this.loading = false;\r\n          app.alerts.show({type: 'error'}, 'Failed to update knowledge base entry: ' + error.message);\r\n          m.redraw();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  deleteEntry(entry) {\r\n    app.modal.show(DeleteKnowledgeBaseEntryModal, {\r\n      entry: entry,\r\n      onconfirm: () => {\r\n        this.loading = true;\r\n        \r\n        app.request({\r\n          method: 'DELETE',\r\n          url: `${app.forum.attribute('apiUrl')}/ai-support/kb/${entry.id}`\r\n        }).then(() => {\r\n          this.entries = this.entries.filter(e => e.id !== entry.id);\r\n          this.loading = false;\r\n          app.alerts.show({type: 'success'}, 'Knowledge base entry has been deleted');\r\n          m.redraw();\r\n        }).catch(error => {\r\n          this.loading = false;\r\n          app.alerts.show({type: 'error'}, 'Failed to delete knowledge base entry: ' + error.message);\r\n          m.redraw();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-group\">\r\n            <h3>Add Knowledge Base Entry</h3>\r\n            \r\n            <div className=\"Form-group\">\r\n              <label>Type</label>\r\n              <div className=\"Select\">\r\n                <select\r\n                  className=\"FormControl\"\r\n                  value={this.newEntry.type}\r\n                  onchange={(e) => {\r\n                    this.newEntry.type = e.target.value;\r\n                    m.redraw();\r\n                  }}\r\n                >\r\n                  <option value=\"qa\">Q&A Type</option>\r\n                  <option value=\"content\">Content Type</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n            {this.newEntry.type === 'qa' && (\r\n              <div className=\"Form-group\">\r\n                <label>Question</label>\r\n                <div className=\"FormControl-container\">\r\n                  <input\r\n                    className=\"FormControl\"\r\n                    type=\"text\"\r\n                    value={this.newEntry.question}\r\n                    oninput={(e) => {\r\n                      this.newEntry.question = e.target.value;\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {this.newEntry.type === 'content' && (\r\n              <div className=\"Form-group\">\r\n                <label>Title (Optional)</label>\r\n                <div className=\"FormControl-container\">\r\n                  <input\r\n                    className=\"FormControl\"\r\n                    type=\"text\"\r\n                    value={this.newEntry.question}\r\n                    placeholder=\"Optional title for content entry\"\r\n                    oninput={(e) => {\r\n                      this.newEntry.question = e.target.value;\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"helpText\">\r\n                  Adding a title helps the AI match relevant content more accurately\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"Form-group\">\r\n              <label>{this.newEntry.type === 'qa' ? 'Answer' : 'Content'}</label>\r\n              <div className=\"FormControl-container\">\r\n                <textarea\r\n                  className=\"FormControl\"\r\n                  rows=\"5\"\r\n                  value={this.newEntry.answer}\r\n                  oninput={(e) => {\r\n                    this.newEntry.answer = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"Form-group\">\r\n              <label>Keywords (comma separated)</label>\r\n              <div className=\"FormControl-container\">\r\n                <input\r\n                  className=\"FormControl\"\r\n                  type=\"text\"\r\n                  value={this.newEntry.keywords}\r\n                  oninput={(e) => {\r\n                    this.newEntry.keywords = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"helpText\">\r\n                Adding keywords helps the AI match relevant content more accurately\r\n              </div>\r\n            </div>\r\n            \r\n            {this.categories.length > 0 && (\r\n              <div className=\"Form-group\">\r\n                <label>Category</label>\r\n                <div className=\"Select\">\r\n                  <select\r\n                    className=\"FormControl\"\r\n                    value={this.newEntry.category_id}\r\n                    onchange={(e) => {\r\n                      this.newEntry.category_id = e.target.value ? parseInt(e.target.value) : null;\r\n                    }}\r\n                  >\r\n                    <option value=\"\">-- Select Category --</option>\r\n                    {this.categories.map(category => (\r\n                      <option value={category.id} key={category.id}>\r\n                        {category.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"Form-group\">\r\n              <Button\r\n                className=\"Button Button--primary\"\r\n                loading={this.loading}\r\n                onclick={() => this.saveEntry()}\r\n              >\r\n                Add Entry\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"Form-group\">\r\n            <h3>Knowledge Base Entries</h3>\r\n            \r\n            {this.loading && <LoadingIndicator />}\r\n            \r\n            {!this.loading && this.entries.length === 0 && (\r\n              <div className=\"helpText\">No knowledge base entries found. Add your first entry above.</div>\r\n            )}\r\n            \r\n            {!this.loading && this.entries.length > 0 && (\r\n              <div className=\"KnowledgeBaseEntries\">\r\n                <table className=\"KnowledgeBaseEntries-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Type</th>\r\n                      <th>Question/Title</th>\r\n                      <th>Answer/Content</th>\r\n                      <th>Keywords</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.entries.map(entry => (\r\n                      <tr key={entry.id}>\r\n                        <td>{this.getEntryType(entry) === 'qa' ? 'Q&A' : 'Content'}</td>\r\n                        <td>\r\n                          {this.getEntryTitle(entry)}\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"KnowledgeBaseEntries-content\">\r\n                            {this.getEntryContent(entry)}\r\n                          </div>\r\n                        </td>\r\n                        <td>{this.getEntryKeywords(entry)}</td>\r\n                        <td>\r\n                          <div className=\"ButtonGroup\">\r\n                            <Button\r\n                              className=\"Button Button--icon\"\r\n                              icon=\"fas fa-edit\"\r\n                              onclick={() => this.editEntry(entry)}\r\n                              title=\"Edit\"\r\n                            />\r\n                            <Button\r\n                              className=\"Button Button--icon\"\r\n                              icon=\"fas fa-trash\"\r\n                              onclick={() => this.deleteEntry(entry)}\r\n                              title=\"Delete\"\r\n                            />\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} ","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import app from 'flarum/admin/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Dropdown from 'flarum/common/components/Dropdown';\r\nimport icon from 'flarum/common/helpers/icon';\r\n\r\n/**\r\n * AI使用统计模态窗口组件\r\n */\r\nexport default class AiUsageStatsModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    \r\n    this.loading = true;\r\n    this.stats = null;\r\n    this.period = 'all';\r\n    this.sortBy = 'total_count';\r\n    this.sortDir = 'desc';\r\n    this.searchQuery = '';\r\n    this.error = null;\r\n    \r\n    // 加载统计数据\r\n    this.loadStats();\r\n  }\r\n  \r\n  className() {\r\n    return 'AiUsageStatsModal Modal--large Modal--dark';\r\n  }\r\n  \r\n  title() {\r\n    return app.translator.trans('leot-ai-support-widget.admin.usage_stats.title');\r\n  }\r\n  \r\n  loadStats() {\r\n    this.loading = true;\r\n    this.error = null;\r\n    \r\n    app.request({\r\n      method: 'GET',\r\n      url: app.forum.attribute('apiUrl') + '/ai-support/stats',\r\n      params: { period: this.period }\r\n    }).then(result => {\r\n      // 处理API返回的数据\r\n      this.stats = result;\r\n      this.loading = false;\r\n      m.redraw();\r\n    }).catch(error => {\r\n      this.loading = false;\r\n      this.error = error;\r\n      app.alerts.show({type: 'error'}, app.translator.trans('leot-ai-support-widget.admin.usage_stats.load_error'));\r\n      m.redraw();\r\n    });\r\n  }\r\n  \r\n  changePeriod(period) {\r\n    this.period = period;\r\n    this.loadStats();\r\n  }\r\n  \r\n  sortUsers(field) {\r\n    if (this.sortBy === field) {\r\n      this.sortDir = this.sortDir === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sortBy = field;\r\n      this.sortDir = 'desc';\r\n    }\r\n    \r\n    m.redraw();\r\n  }\r\n  \r\n  getUserStats() {\r\n    // 尝试从不同位置获取用户统计数据\r\n    if (this.stats && this.stats.meta && this.stats.meta.user_stats && Array.isArray(this.stats.meta.user_stats)) {\r\n      return this.stats.meta.user_stats;\r\n    }\r\n    \r\n    if (this.stats && this.stats.user_stats && Array.isArray(this.stats.user_stats)) {\r\n      return this.stats.user_stats;\r\n    }\r\n    \r\n    // 如果没有找到真实数据，使用硬编码的测试数据\r\n    return [\r\n      {\r\n        user_id: 1,\r\n        username: 'admin',\r\n        display_name: '管理员(硬编码测试数据)',\r\n        total_count: 25,\r\n        last_used: new Date().toISOString()\r\n      },\r\n      {\r\n        user_id: 2,\r\n        username: 'test_user',\r\n        display_name: '测试用户(硬编码测试数据)',\r\n        total_count: 10,\r\n        last_used: new Date(Date.now() - 86400000).toISOString()\r\n      }\r\n    ];\r\n  }\r\n  \r\n  getSortedUsers() {\r\n    const users = this.getUserStats();\r\n    \r\n    // 过滤用户\r\n    let filteredUsers = users;\r\n    if (this.searchQuery) {\r\n      const query = this.searchQuery.toLowerCase();\r\n      filteredUsers = users.filter(user => \r\n        user.username.toLowerCase().includes(query) || \r\n        (user.display_name && user.display_name.toLowerCase().includes(query))\r\n      );\r\n    }\r\n    \r\n    // 排序用户\r\n    return filteredUsers.sort((a, b) => {\r\n      let aValue = a[this.sortBy];\r\n      let bValue = b[this.sortBy];\r\n      \r\n      // 特殊处理日期字段\r\n      if (this.sortBy === 'last_used') {\r\n        aValue = new Date(aValue).getTime();\r\n        bValue = new Date(bValue).getTime();\r\n      }\r\n      \r\n      if (this.sortDir === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n  }\r\n  \r\n  getSortIcon(field) {\r\n    if (this.sortBy !== field) return '';\r\n    \r\n    return this.sortDir === 'asc' \r\n      ? icon('fas fa-sort-up') \r\n      : icon('fas fa-sort-down');\r\n  }\r\n  \r\n  content() {\r\n    if (this.loading) {\r\n      return (\r\n        <div className=\"Modal-body\">\r\n          <LoadingIndicator />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    if (this.error) {\r\n      return (\r\n        <div className=\"Modal-body\">\r\n          <div className=\"AiUsageStats-error\">\r\n            <p>{app.translator.trans('leot-ai-support-widget.admin.usage_stats.load_error')}</p>\r\n            <pre>{JSON.stringify(this.error, null, 2)}</pre>\r\n            <Button className=\"Button Button--primary\" onclick={() => this.loadStats()}>\r\n              {app.translator.trans('leot-ai-support-widget.admin.usage_stats.retry')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    if (!this.stats) {\r\n      return (\r\n        <div className=\"Modal-body\">\r\n          <div className=\"AiUsageStats-error\">\r\n            {app.translator.trans('leot-ai-support-widget.admin.usage_stats.no_data')}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    const users = this.getSortedUsers();\r\n    \r\n    // 获取统计数据\r\n    let totalUsage = 0;\r\n    let todayUsage = 0;\r\n    let yesterdayUsage = 0;\r\n    let activeUsers = users.length;\r\n    \r\n    // 尝试从API响应中获取统计数据\r\n    if (this.stats.data && Array.isArray(this.stats.data)) {\r\n      for (const item of this.stats.data) {\r\n        if (item && item.attributes) {\r\n          totalUsage = item.attributes.total_usage || totalUsage;\r\n          todayUsage = item.attributes.today_usage || todayUsage;\r\n          yesterdayUsage = item.attributes.yesterday_usage || yesterdayUsage;\r\n          activeUsers = item.attributes.active_users || activeUsers;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"AiUsageStats\">\r\n          <div className=\"AiUsageStats-summary\">\r\n            <div className=\"AiUsageStats-summaryItem\">\r\n              <div className=\"AiUsageStats-summaryValue\">{totalUsage}</div>\r\n              <div className=\"AiUsageStats-summaryLabel\">{app.translator.trans('leot-ai-support-widget.admin.usage_stats.total_usage')}</div>\r\n            </div>\r\n            <div className=\"AiUsageStats-summaryItem\">\r\n              <div className=\"AiUsageStats-summaryValue\">{todayUsage}</div>\r\n              <div className=\"AiUsageStats-summaryLabel\">{app.translator.trans('leot-ai-support-widget.admin.usage_stats.today_usage')}</div>\r\n            </div>\r\n            <div className=\"AiUsageStats-summaryItem\">\r\n              <div className=\"AiUsageStats-summaryValue\">{yesterdayUsage}</div>\r\n              <div className=\"AiUsageStats-summaryLabel\">{app.translator.trans('leot-ai-support-widget.admin.usage_stats.yesterday_usage')}</div>\r\n            </div>\r\n            <div className=\"AiUsageStats-summaryItem\">\r\n              <div className=\"AiUsageStats-summaryValue\">{activeUsers}</div>\r\n              <div className=\"AiUsageStats-summaryLabel\">{app.translator.trans('leot-ai-support-widget.admin.usage_stats.active_users')}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"AiUsageStats-filters\">\r\n            <div className=\"AiUsageStats-periodFilter\">\r\n              <Dropdown\r\n                label={app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.' + this.period)}\r\n                buttonClassName=\"Button Button--primary\"\r\n              >\r\n                <Button \r\n                  className=\"Dropdown-item\" \r\n                  onclick={() => this.changePeriod('all')}\r\n                  active={this.period === 'all'}\r\n                >\r\n                  {app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.all')}\r\n                </Button>\r\n                <Button \r\n                  className=\"Dropdown-item\" \r\n                  onclick={() => this.changePeriod('today')}\r\n                  active={this.period === 'today'}\r\n                >\r\n                  {app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.today')}\r\n                </Button>\r\n                <Button \r\n                  className=\"Dropdown-item\" \r\n                  onclick={() => this.changePeriod('yesterday')}\r\n                  active={this.period === 'yesterday'}\r\n                >\r\n                  {app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.yesterday')}\r\n                </Button>\r\n                <Button \r\n                  className=\"Dropdown-item\" \r\n                  onclick={() => this.changePeriod('week')}\r\n                  active={this.period === 'week'}\r\n                >\r\n                  {app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.week')}\r\n                </Button>\r\n                <Button \r\n                  className=\"Dropdown-item\" \r\n                  onclick={() => this.changePeriod('month')}\r\n                  active={this.period === 'month'}\r\n                >\r\n                  {app.translator.trans('leot-ai-support-widget.admin.usage_stats.period.month')}\r\n                </Button>\r\n              </Dropdown>\r\n            </div>\r\n            \r\n            <div className=\"AiUsageStats-search\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"FormControl\" \r\n                placeholder={app.translator.trans('leot-ai-support-widget.admin.usage_stats.search_placeholder')}\r\n                value={this.searchQuery}\r\n                oninput={e => {\r\n                  this.searchQuery = e.target.value;\r\n                  m.redraw();\r\n                }}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"AiUsageStats-refresh\">\r\n              <Button \r\n                className=\"Button Button--icon\" \r\n                icon=\"fas fa-sync-alt\"\r\n                onclick={() => this.loadStats()}\r\n                title={app.translator.trans('leot-ai-support-widget.admin.usage_stats.refresh')}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"AiUsageStats-table\">\r\n            <table className=\"Table\">\r\n              <thead>\r\n                <tr>\r\n                  <th \r\n                    className=\"AiUsageStats-tableHeader AiUsageStats-userColumn\"\r\n                    onclick={() => this.sortUsers('username')}\r\n                  >\r\n                    {app.translator.trans('leot-ai-support-widget.admin.usage_stats.table.user')}\r\n                    {this.getSortIcon('username')}\r\n                  </th>\r\n                  <th \r\n                    className=\"AiUsageStats-tableHeader AiUsageStats-countColumn\"\r\n                    onclick={() => this.sortUsers('total_count')}\r\n                  >\r\n                    {app.translator.trans('leot-ai-support-widget.admin.usage_stats.table.count')}\r\n                    {this.getSortIcon('total_count')}\r\n                  </th>\r\n                  <th \r\n                    className=\"AiUsageStats-tableHeader AiUsageStats-dateColumn\"\r\n                    onclick={() => this.sortUsers('last_used')}\r\n                  >\r\n                    {app.translator.trans('leot-ai-support-widget.admin.usage_stats.table.last_used')}\r\n                    {this.getSortIcon('last_used')}\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan=\"3\" className=\"AiUsageStats-noUsers\">\r\n                      {app.translator.trans('leot-ai-support-widget.admin.usage_stats.no_users')}\r\n                    </td>\r\n                  </tr>\r\n                ) : users.map(user => (\r\n                  <tr key={user.user_id}>\r\n                    <td className=\"AiUsageStats-userCell\">\r\n                      {user.display_name || user.username}\r\n                    </td>\r\n                    <td className=\"AiUsageStats-countCell\">\r\n                      {user.total_count}\r\n                    </td>\r\n                    <td className=\"AiUsageStats-dateCell\">\r\n                      {new Date(user.last_used).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} ","import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport KnowledgeBaseSettingsModal from './KnowledgeBaseSettingsModal';\r\nimport AiUsageStatsModal from './AiUsageStatsModal';\r\n\r\nexport default class AiSettingsPage extends ExtensionPage {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div className=\"AiSettingsPage\">\r\n        <div className=\"container\">\r\n          {this.buildSettingsForm()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  buildSettingsForm() {\r\n    return (\r\n      <div className=\"Form\">\r\n        <h2>AI Support Widget Settings</h2>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Enable AI Support Widget</label>\r\n          <Switch\r\n            state={this.setting('leot-ai-support-widget.enabled')()}\r\n            onchange={this.setting('leot-ai-support-widget.enabled')}\r\n          >\r\n            Enable AI Support Widget\r\n          </Switch>\r\n          <div className=\"helpText\">\r\n            Turn on or off the AI support widget on your forum.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>AI Provider</label>\r\n          <div className=\"Select\">\r\n            <select \r\n              className=\"FormControl\"\r\n              value={this.setting('leot-ai-support-widget.provider')()} \r\n              onchange={e => this.setting('leot-ai-support-widget.provider')(e.target.value)}\r\n            >\r\n              <option value=\"openai\">OpenAI ChatGPT</option>\r\n              <option value=\"deepseek\">DeepSeek</option>\r\n              <option value=\"claude\">Claude</option>\r\n              <option value=\"gemini\">Gemini</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Select which AI provider to use for the support widget.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>API Key</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"password\" \r\n              bidi={this.setting('leot-ai-support-widget.api_key')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Enter your API key for the selected AI provider.\r\n          </div>\r\n        </div>\r\n        \r\n        <h3>Proxy Settings</h3>\r\n        \r\n        <div className=\"Form-group\">\r\n          <Switch\r\n            state={this.setting('leot-ai-support-widget.openai_use_proxy')()}\r\n            onchange={this.setting('leot-ai-support-widget.openai_use_proxy')}\r\n          >\r\n            Enable Proxy for OpenAI\r\n          </Switch>\r\n          <div className=\"helpText\">\r\n            Enable proxy connection for OpenAI API requests.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Proxy Host</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"text\" \r\n              placeholder=\"127.0.0.1\"\r\n              bidi={this.setting('leot-ai-support-widget.proxy_host')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Proxy server host address (default: 127.0.0.1).\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Proxy Port</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              min=\"1\" \r\n              max=\"65535\" \r\n              placeholder=\"7890\"\r\n              bidi={this.setting('leot-ai-support-widget.proxy_port')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Proxy server port number (default: 7890).\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Model Name</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"text\" \r\n              placeholder=\"gpt-3.5-turbo, deepseek-chat...\"\r\n              bidi={this.setting('leot-ai-support-widget.model_name')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Enter the model name to use (e.g., gpt-3.5-turbo, deepseek-chat).\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Max Tokens</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              min=\"100\" \r\n              max=\"4000\" \r\n              bidi={this.setting('leot-ai-support-widget.max_tokens')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Maximum number of tokens to generate in AI responses.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Request Timeout</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              min=\"5\" \r\n              max=\"120\" \r\n              bidi={this.setting('leot-ai-support-widget.timeout')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Timeout in seconds for AI API requests.\r\n          </div>\r\n        </div>\r\n        \r\n        <h3>Usage Limit Settings</h3>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Daily Requests Limit</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              min=\"1\" \r\n              bidi={this.setting('leot-ai-support-widget.daily_requests_limit')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Maximum number of AI requests per user per day.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Usage Statistics</label>\r\n          <button \r\n            className=\"Button\" \r\n            type=\"button\"\r\n            onclick={() => app.modal.show(AiUsageStatsModal)}\r\n          >\r\n            View Usage Statistics\r\n          </button>\r\n          <div className=\"helpText\">\r\n            View detailed statistics about AI usage by users.\r\n          </div>\r\n        </div>\r\n        \r\n        <h3>Content Settings</h3>\r\n        \r\n        <div className=\"Form-group\">\r\n          <Switch\r\n            state={this.setting('leot-ai-support-widget.enable_indexing')()}\r\n            onchange={this.setting('leot-ai-support-widget.enable_indexing')}\r\n          >\r\n            Enable Forum Content Indexing\r\n          </Switch>\r\n          <div className=\"helpText\">\r\n            Allow AI to search and reference forum content.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Search Result Limit</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              min=\"1\" \r\n              max=\"20\" \r\n              bidi={this.setting('leot-ai-support-widget.search_limit')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Maximum number of search results to include in AI context.\r\n          </div>\r\n        </div>\r\n        \r\n        <h3>Knowledge Base Settings</h3>\r\n        \r\n        <div className=\"Form-group\">\r\n          <Switch\r\n            state={this.setting('leot-ai-support-widget.kb_enabled')()}\r\n            onchange={this.setting('leot-ai-support-widget.kb_enabled')}\r\n          >\r\n            Enable Knowledge Base\r\n          </Switch>\r\n          <div className=\"helpText\">\r\n            Enable knowledge base to provide reference information for AI responses.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Knowledge Base Search Weight</label>\r\n          <div className=\"FormControl-container\">\r\n            <input \r\n              className=\"FormControl\"\r\n              type=\"number\" \r\n              step=\"0.1\" \r\n              min=\"0.1\" \r\n              max=\"5\" \r\n              bidi={this.setting('leot-ai-support-widget.kb_search_weight')}\r\n            />\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Higher values prioritize knowledge base content in AI responses.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <button \r\n            className=\"Button\"\r\n            type=\"button\" \r\n            onclick={() => this.showKnowledgeBaseModal()}\r\n          >\r\n            Manage Knowledge Base Entries\r\n          </button>\r\n          <div className=\"helpText\">\r\n            Add, edit, or remove knowledge base entries for AI assistant.\r\n          </div>\r\n        </div>\r\n        \r\n        <h3>Widget Settings</h3>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Widget Position</label>\r\n          <div className=\"Select\">\r\n            <select \r\n              className=\"FormControl\"\r\n              value={this.setting('leot-ai-support-widget.widget_position')()} \r\n              onchange={e => this.setting('leot-ai-support-widget.widget_position')(e.target.value)}\r\n            >\r\n              <option value=\"bottom-right\">Bottom Right</option>\r\n              <option value=\"bottom-left\">Bottom Left</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Choose where the AI support widget should appear on the page.\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label>Theme</label>\r\n          <div className=\"Select\">\r\n            <select \r\n              className=\"FormControl\"\r\n              value={this.setting('leot-ai-support-widget.theme')()} \r\n              onchange={e => this.setting('leot-ai-support-widget.theme')(e.target.value)}\r\n            >\r\n              <option value=\"light\">Light</option>\r\n              <option value=\"dark\">Dark</option>\r\n              <option value=\"auto\">Auto (Follow System)</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"helpText\">\r\n            Choose the theme for the AI support widget.\r\n          </div>\r\n        </div>\r\n      \r\n        {this.submitButton()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showKnowledgeBaseModal() {\r\n    app.modal.show(KnowledgeBaseSettingsModal);\r\n  }\r\n}","// 管理面板入口文件\r\nimport app from 'flarum/admin/app';\r\nimport initialize from './js/src/admin';\r\n\r\napp.initializers.add('leot-ai-support-widget', initialize); ","import app from 'flarum/admin/app';\nimport KnowledgeBaseSettingsModal from './components/KnowledgeBaseSettingsModal';\nimport AiSettingsPage from './components/AiSettingsPage';\nimport AiUsageStatsModal from './components/AiUsageStatsModal';\n\n// Export the initialization function\nexport default function() {\n  // 注册设置项\n  app.extensionData\n    .for('leot-ai-support-widget')\n    // 基本设置\n    .registerSetting({\n      setting: 'leot-ai-support-widget.enabled',\n      type: 'boolean',\n      label: 'Enable AI Support Widget',\n      default: true\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.provider',\n      type: 'select',\n      label: 'AI Provider',\n      options: {\n        'openai': 'OpenAI ChatGPT',\n        'deepseek': 'DeepSeek',\n        'claude': 'Claude',\n        'gemini': 'Gemini'\n      },\n      default: 'openai'\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.api_key',\n      type: 'text',\n      label: 'API Key',\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.model_name',\n      type: 'text',\n      label: 'Model Name',\n      default: 'gpt-3.5-turbo',\n      placeholder: 'gpt-3.5-turbo, deepseek-chat...'\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.max_tokens',\n      type: 'number',\n      label: 'Max Tokens',\n      default: 500,\n      min: 100,\n      max: 4000\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.timeout',\n      type: 'number',\n      label: 'Request Timeout',\n      help: 'Timeout in seconds for AI API requests',\n      default: 15,\n      min: 5,\n      max: 120\n    })\n    // 使用限制设置\n    .registerSetting(() => <h3>Usage Limit Settings</h3>)\n    .registerSetting({\n      setting: 'leot-ai-support-widget.daily_requests_limit',\n      type: 'number',\n      label: 'Daily Requests Limit',\n      help: 'Maximum number of AI requests per user per day',\n      default: 20,\n      min: 1,\n      onchange: function(value) {\n        let numValue = parseInt(value, 10);\n        if (isNaN(numValue) || numValue < 1) {\n          app.alerts.show({type: 'error'}, 'Daily request limit must be at least 1');\n          return 1;\n        }\n        return numValue;\n      }\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.usage_stats',\n      type: 'custom',\n      component: function() {\n        return (\n          <div className=\"Form-group\">\n            <label>Usage Statistics</label>\n            <button \n              className=\"Button\" \n              onclick={() => app.modal.show(AiUsageStatsModal)}\n            >\n              View Usage Statistics\n            </button>\n            <div className=\"helpText\">\n              View detailed statistics about AI usage by users\n            </div>\n          </div>\n        );\n      }\n    })\n    // 内容索引设置\n    .registerSetting(() => <h3>Content Settings</h3>)\n    .registerSetting({\n      setting: 'leot-ai-support-widget.enable_indexing',\n      type: 'boolean',\n      label: 'Enable Forum Content Indexing',\n      help: 'Allow AI to search and reference forum content',\n      default: true\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.search_limit',\n      type: 'number',\n      label: 'Search Result Limit',\n      help: 'Maximum number of search results to include in AI context',\n      default: 10,\n      min: 1,\n      max: 20\n    })\n    // 知识库设置 - 只保留启用开关和按钮\n    .registerSetting(() => <h3>Knowledge Base Settings</h3>)\n    .registerSetting({\n      setting: 'leot-ai-support-widget.kb_enabled',\n      type: 'boolean',\n      label: 'Enable Knowledge Base',\n      default: true\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.kb_search_weight',\n      type: 'number',\n      label: 'Knowledge Base Search Weight',\n      help: 'Higher values prioritize knowledge base content in AI responses',\n      default: 1.5,\n      min: 0.1,\n      max: 5,\n      step: 0.1\n    })\n    .registerSetting({\n      label: 'Knowledge Base Management',\n      setting: 'leot-ai-support-widget.kb_management',\n      type: 'custom',\n      component: function() {\n        return (\n          <div className=\"Form-group\">\n            <button \n              className=\"Button\" \n              onclick={() => app.modal.show(KnowledgeBaseSettingsModal)}\n            >\n              Manage Knowledge Base Entries\n            </button>\n            <div className=\"helpText\">\n              Add, edit, or remove knowledge base entries for AI assistant\n            </div>\n          </div>\n        );\n      }\n    })\n    // 小部件设置\n    .registerSetting(() => <h3>Widget Settings</h3>)\n    .registerSetting({\n      setting: 'leot-ai-support-widget.widget_position',\n      type: 'select',\n      label: 'Widget Position',\n      options: {\n        'bottom-right': 'Bottom Right',\n        'bottom-left': 'Bottom Left'\n      },\n      default: 'bottom-right'\n    })\n    .registerSetting({\n      setting: 'leot-ai-support-widget.theme',\n      type: 'select',\n      label: 'Theme',\n      options: {\n        'light': 'Light',\n        'dark': 'Dark',\n        'auto': 'Auto (Follow System)'\n      },\n      default: 'auto'\n    })\n    // 权限设置\n    .registerPermission({\n      icon: 'fas fa-robot',\n      label: 'Use AI Support',\n      permission: 'leot-ai-support-widget.use',\n      allowGuest: false\n    }, 'start')\n    .registerPermission({\n      icon: 'fas fa-database',\n      label: 'Manage knowledge base',\n      permission: 'leot-ai-support-widget.manageKnowledgeBase',\n      allowGuest: false\n    }, 'moderate');\n\n  // 添加AI设置页面为主页面\n  app.extensionData\n    .for('leot-ai-support-widget')\n    .registerPage(AiSettingsPage);\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","DeleteKnowledgeBaseEntryModal","_Modal","apply","arguments","_proto","oninit","vnode","this","entry","attrs","className","title","content","_this","m","Button","onclick","onconfirm","hide","Modal","EditKnowledgeBaseEntryModal","_this$entry$attribute","_this$entry$attribute2","_this$entry$attribute3","_this$entry$attribute4","_this$entry$attribute5","editedEntry","type","getEntryType","question","attributes","answer","keywords","category_id","categories","value","onchange","target","redraw","oninput","placeholder","rows","length","parseInt","map","category","id","name","console","log","JSON","stringify","onsubmit","KnowledgeBaseSettingsModal","loading","entries","newEntry","newCategory","description","loadEntries","loadCategories","app","method","url","attribute","then","result","data","error","show","message","_this2","saveEntry","_this3","validateEntry","body","getEntryTitle","_entry$attributes","_entry$attributes2","getEntryContent","_entry$attributes3","generatedTitle","substring","firstKeyword","split","trim","_entry$attributes4","_entry$attributes5","getEntryKeywords","_entry$attributes6","editEntry","_this4","index","findIndex","deleteEntry","_this5","filter","_this6","LoadingIndicator","icon","AiUsageStatsModal","stats","period","sortBy","sortDir","searchQuery","loadStats","trans","params","changePeriod","sortUsers","field","getUserStats","meta","user_stats","Array","isArray","user_id","username","display_name","total_count","last_used","Date","toISOString","now","getSortedUsers","users","filteredUsers","query","toLowerCase","user","includes","sort","b","aValue","bValue","getTime","getSortIcon","totalUsage","todayUsage","yesterdayUsage","activeUsers","_step","_iterator","_createForOfIteratorHelperLoose","done","item","total_usage","today_usage","yesterday_usage","active_users","Dropdown","label","buttonClassName","active","colSpan","toLocaleDateString","AiSettingsPage","_ExtensionPage","buildSettingsForm","Switch","state","setting","bidi","min","max","step","showKnowledgeBaseModal","submitButton","ExtensionPage","add","registerSetting","default","options","help","numValue","isNaN","component","registerPermission","permission","allowGuest","registerPage"],"sourceRoot":""}